generator client {
    provider      = "prisma-client-js"
    output        = "../lib/generated/prisma"
    binaryTargets = ["native", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum PlatformType {
    GITHUB
    LINKEDIN
    LEETCODE
    PORTFOLIO
}

model WaitlistForCoderz {
    id        String   @id @default(cuid())
    name      String
    email     String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id            String    @id @default(cuid())
    clerkId       String    @unique
    email         String    @unique
    name          String?
    avatar        String?
    platforms     Platform[]
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
}

model Platform {
    id            String    @id @default(cuid())
    userId        String
    user          User      @relation(fields: [userId], references: [id])
    type          PlatformType
    username      String
    profileUrl    String
    data          Json?
    lastSynced    DateTime  @default(now())
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    @@unique([userId, type])
}

model PortfolioInsight {
    id            String    @id @default(cuid())
    userId        String
    data          Json      
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
}

model PortfolioCard {
    id            String    @id @default(cuid())
    userId        String
    title         String
    description   String
    cardData      Json      // Stores the card's visual data like metrics, skills, highlights
    imageUrl      String?   // Generated card image URL
    isPublic      Boolean   @default(false)
    shareCount    Int       @default(0)
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    @@index([userId])
    @@index([createdAt])
}
